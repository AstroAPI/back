# config/services.yaml
# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:
    app.openweathermap.api_key: '%env(OPENWEATHERMAP_API_KEY)%'
    app.openweathermap.api_url: '%env(OPENWEATHERMAP_API_URL)%'
    app.redis.url: '%env(REDIS_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
    monolog.logger.weather:
        class: Symfony\Bridge\Monolog\Logger
        arguments: ['weather']
        calls:
            - [pushHandler, ['@monolog.handler.weather']]
            
    monolog.handler.weather:
        class: Monolog\Handler\RotatingFileHandler
        arguments: ['%kernel.logs_dir%/weather.log', 10, 'debug']
    
    # Service OpenWeatherMap
    App\Service\OpenWeatherMapService:
        arguments:
            $apiKey: '%env(OPENWEATHERMAP_API_KEY)%'
            $apiUrl: '%env(OPENWEATHERMAP_API_URL)%'
            $weatherLogger: '@monolog.logger.weather'
            $redisUrl: '%env(REDIS_URL)%'

    # Service Horoscope
    App\Service\HoroscopeService:
        arguments:
            $weatherService: '@App\Service\OpenWeatherMapService'
            $templateRepository: '@App\Repository\HoroscopeTemplateRepository'
            $weatherLogger: '@monolog.logger.weather'
            
    # Middleware pour logger les erreurs
    App\EventSubscriber\WeatherApiExceptionSubscriber:
        arguments:
            $weatherLogger: '@monolog.logger.weather'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    redis.client:
        class: Redis
        calls:
            - [connect, ['%env(REDIS_HOST)%', '%env(int:REDIS_PORT)%']]
            - [auth, ['%env(default::REDIS_PASSWORD)%']]
            - [setOption, [2, 1]] 
        
    # Adaptateur Redis pour le cache Symfony
    cache.adapter.redis:
        class: Symfony\Component\Cache\Adapter\RedisAdapter
        arguments:
            - '@redis.client'  
            - 'astro_api'      
            - 3600        